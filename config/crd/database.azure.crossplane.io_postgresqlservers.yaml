
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: postgresqlservers.database.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.bindingPhase
    name: STATUS
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .spec.classRef.name
    name: CLASS
    type: string
  - JSONPath: .spec.version
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.azure.crossplane.io
  names:
    kind: PostgreSQLServer
    listKind: PostgreSQLServerList
    plural: postgresqlservers
    singular: postgresqlserver
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A PostgreSQLServer is a managed resource that represents an Azure
        PostgreSQL Database Server.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SQLServerSpec defines the desired state of a SQLServer.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: SQLServerParameters define the desired state of an Azure
                SQL Database, either PostgreSQL or MySQL.
              properties:
                administratorLogin:
                  description: AdministratorLogin - The administrator's login name
                    of a server. Can only be specified when the server is being created
                    (and is required for creation).
                  type: string
                earliestRestoreDate:
                  description: EarliestRestoreDate - Earliest restore point creation
                    time (ISO8601 format)
                  format: date-time
                  type: string
                fullyQualifiedDomainName:
                  description: FullyQualifiedDomainName - The fully qualified domain
                    name of a server.
                  type: string
                location:
                  description: Location specifies the location of this SQLServer.
                  type: string
                replicaCapacity:
                  description: ReplicaCapacity - The maximum number of replicas that
                    a master server can have.
                  type: integer
                replicationRole:
                  description: ReplicationRole - The replication role of the server.
                  type: string
                resourceGroupName:
                  description: ResourceGroupName specifies the name of the resource
                    group that should contain this SQLServer.
                  type: string
                resourceGroupNameRef:
                  description: ResourceGroupNameRef - A reference to a ResourceGroup
                    object to retrieve its name
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                sku:
                  description: SKU is the billing information related properties of
                    the server.
                  properties:
                    capacity:
                      description: Capacity - The scale up/out capacity, representing
                        server's compute units.
                      type: integer
                    family:
                      description: Family - The family of hardware.
                      type: string
                    name:
                      description: Name - The name of the sku, typically, tier + family
                        + cores, e.g. B_Gen4_1, GP_Gen5_8.
                      type: string
                    size:
                      description: Size - The size code, to be interpreted by resource
                        as appropriate.
                      type: string
                    tier:
                      description: 'Tier - The tier of the particular SKU, e.g. Basic.
                        Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                      type: string
                  required:
                  - capacity
                  - family
                  - name
                  - size
                  - tier
                  type: object
                sslEnforcement:
                  description: 'SslEnforcement - Enable ssl enforcement or not when
                    connect to server. Possible values include: ''SslEnforcementEnumEnabled'',
                    ''SslEnforcementEnumDisabled'''
                  enum:
                  - Enabled
                  - Disabled
                  type: string
                storageProfile:
                  description: StorageProfile - Storage profile of a server.
                  properties:
                    backupRetentionDays:
                      description: BackupRetentionDays - Backup retention days for
                        the server.
                      type: integer
                    geoRedundantBackup:
                      description: 'GeoRedundantBackup - Enable Geo-redundant or not
                        for server backup. Possible values include: ''Enabled'', ''Disabled'''
                      enum:
                      - Enabled
                      - Disabled
                      type: string
                    storageAutogrow:
                      description: StorageAutogrow - Enable Storage Auto Grow.
                      enum:
                      - Enabled
                      - Disabled
                      type: string
                    storageMB:
                      description: StorageMB - Max storage allowed for a server.
                      type: integer
                  type: object
                tags:
                  additionalProperties:
                    type: string
                  description: Tags - Application-specific metadata in the form of
                    key-value pairs.
                  type: object
                version:
                  description: 'Version - Server version. Possible values include:
                    ''FiveFullStopSix'', ''FiveFullStopSeven'''
                  type: string
              required:
              - administratorLogin
              - location
              - sku
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to the external
                resource this managed resource manages when the managed resource is
                deleted. "Delete" deletes the external resource, while "Retain" (the
                default) does not. Note this behaviour is subtly different from other
                uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: A SQLServerStatus represents the observed state of a SQLServer.
          properties:
            atProvider:
              description: SQLServerObservation represents the current state of Azure
                SQL resource.
              properties:
                endpoint:
                  description: Endpoint of the MySQL Server instance used in connection
                    strings.
                  type: string
                message:
                  description: A Message containing detail on the state of this SQLServer,
                    if any.
                  type: string
                providerID:
                  description: ProviderID is the external ID to identify this resource
                    in the cloud provider.
                  type: string
                state:
                  description: State of this SQLServer.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
